{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":"<p>DaLi's notebook.</p>"},{"location":"github/mkdocs/mkdocs/","title":"mkdocs","text":""},{"location":"github/mkdocs/mkdocs/#install","title":"install","text":"<pre><code>pip install mkdocs-material\n</code></pre>"},{"location":"github/mkdocs/mkdocs/#setup","title":"setup","text":"<p>Init a workspace:</p> <pre><code>mkdocs new .\n</code></pre> <p>Then add your markdowns to <code>docs</code>. Folder structure will be preserved in the navigation.</p>"},{"location":"github/mkdocs/mkdocs/#configuration","title":"configuration","text":"<p>edit <code>mkdocs.yml</code>, an example:</p> <pre><code>site_name: DaLi's notebooks\ntheme:\n  logo: _assets/icon.png\n  favicon: _assets/icon.png\n  name: material\n  palette:\n    primary: brown\n    accent: lime\n  features:\n    - navigation.instant  \n    - navigation.tracking\n    - navigation.top\n    - header.autohide\n    - search.suggest\n    - search.highlight\n    - search.share\nrepo_url: https://github.com/DaLi-Jack/Notebooks\nplugins:\n  - search\nmarkdown_extensions:\n  - tables  \n  - pymdownx.betterem\n  - pymdownx.arithmatex:\n      generic: true  \n  - pymdownx.highlight\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.superfences  \n  - pymdownx.tabbed:\n      alternate_style: true \n  - mdx_truly_sane_lists # fix typora 2 space indentation, ref: https://github.com/mkdocs/mkdocs/issues/545\n\nextra_javascript:\n  - _js/mathjax.js\n  - https://polyfill.io/v3/polyfill.min.js?features=es6\n  - https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js      \n</code></pre> <p>The inline math plugin needs an extra file at <code>docs/_js/mathjax.js</code>:</p> <pre><code>window.MathJax = {\n    tex: {\n      inlineMath: [[\"\\\\(\", \"\\\\)\"]],\n      displayMath: [[\"\\\\[\", \"\\\\]\"]],\n      processEscapes: true,\n      processEnvironments: true\n    },\n    options: {\n      ignoreHtmlClass: \".*|\",\n      processHtmlClass: \"arithmatex\"\n    }\n  };\n\n  document$.subscribe(() =&gt; {\n    MathJax.typesetPromise()\n  })\n</code></pre> <p>Note that the default mathjax's line breaking can be hard to use, we can use a script to post-process the markdowns following typora's setting: <pre><code>import os\nimport re\nimport glob\n\nfiles = glob.glob('docs/**/*.md', recursive=True)\n\n# fix math blocks to be correctly rendered by mathjax:\n# 1. $$..$$ will always be preceded and followed by an empty line, and there is no blank line inside.\n# 2. always wrap all content within \\displaylines{}\n\nfor file in files:\n    with open(file, 'r') as f:\n        lines = f.readlines()\n\n    # naive matching $$...$$\n    outside = True\n    modified = False\n    for i, line in enumerate(lines):\n        if re.match('^\\$\\$', line) is not None:\n            if outside:\n                if lines[i+1] != '\\displaylines{\\n':\n                    lines[i] = '\\n$$\\n\\displaylines{\\n'\n                    modified = True\n                outside = False\n            else:\n                if lines[i-1] != '}\\n':\n                    lines[i] = '}\\n$$\\n\\n'\n                    modified = True\n                outside = True\n\n        # remove blank lines inside\n        if not outside and re.match('^\\s*\\n$', line):\n            lines[i] = ''\n            modified = True\n\n    # remove excessive blank lines\n    cnt = 0\n    for i, line in enumerate(lines):\n        if re.match('^\\s*\\n$', line):\n            cnt += 1\n            if cnt &gt;= 3:\n                lines[i] = ''\n                modified = True\n        else:\n            cnt = 0\n\n    if modified:\n        lines = [line for line in lines if line != '']\n\n    if not outside:\n        print(f'[WARN] {file} unmatched $$, no modification is done.')\n    else:\n        if modified:\n            with open(file, 'w') as f:\n                f.writelines(lines)\n            print(f'[INFO] {file} fixed.')\n</code></pre></p>"},{"location":"github/mkdocs/mkdocs/#serve","title":"serve","text":"<p>At the root of workspace:</p> <pre><code>mkdocs serve\n</code></pre> <p>by default it serves at <code>localhost:8000</code></p>"},{"location":"github/mkdocs/mkdocs/#deploy","title":"deploy","text":"<p>Use github workflows to automatically deploy to github pages:</p> <p>Create file at <code>.github/workflows/ci.yml</code>:</p> <pre><code>name: ci \non:\n  push:\n    branches: \n      - master # or main\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-python@v2\n        with:\n          python-version: 3.x\n      - run: pip install mkdocs-material\n      - run: pip install mdx-truly-sane-lists\n      - run: mkdocs gh-deploy --force\n</code></pre> <p>It is invoked at each push to master branch.</p> <p>Remember to enable Workflow permission.</p> <p></p> <p>Use gh-deploy branch</p> <p></p>"}]}